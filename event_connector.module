<?php
/**
 * @file
 * Event connector module to connect Kyyti to Evant calendar.
 */

/**
 * Implements hook_help().
 */
function event_connector_help($path, $arg) {
  if ($path == 'admin/help#event_connector') {
    return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

/**
 * Implemtents hook_menu().
 */
function event_connector_menu() {
  $items = array();
  $items['admin/structure/event_connector'] = array(
    'title' => 'Event Calendar',
    'description' => 'Settings for event field mappings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('event_connector_mapping'),
    'access arguments' => array('administer event connector'),
  );
  $items['admin/structure/event_connector/settings'] = array(
    'title' => 'Settings',
    'description' => 'Modules settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('event_connector_settings'),
    'access arguments' => array('administer event connector'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/structure/event_connector/general'] = array(
    'title' => 'Field mappings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  return $items;
}

/**
 * Implements hook_perm().
 */
function event_connector_permission() {
  return array(
    'administer event connector' => array(
      'title' => t('Administer Event Connector', array(),
        array('context' => 'event_connector')),
    ),
  );
}

/**
 * Module field mapping settings form.
 */
function event_connector_mapping() {
  $form = array();

  $our_event_type = variable_get('event_connector_type', '0');

  $types = node_type_get_types();
  $content_types[0] = t('Choose');
  foreach ($types as $type) {
    $content_types[$type->type] = $type->name;
  }
  $form['event_connector_type'] = array(
    '#type' => 'select',
    '#title' => t('Event content type'),
    '#options' => $content_types,
    '#default_value' => $our_event_type,
    '#description' => t('Select your event content type to map.'),
    '#disabled' => $our_event_type == '0' ? FALSE : TRUE,
  );

  if ($our_event_type != '0') {
    event_connector_field_mappings($form);
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

/**
 * Filed mappings form.
 */
function event_connector_field_mappings(&$form) {
  $filename = drupal_get_path('module', 'event_connector');
  $filename .= '/event_description.json';

  if (file_exists($filename)) {
    $json = file_get_contents($filename);
    $event_data = json_decode($json);
    dpm($event_data, 'Event');

    foreach ($event_data as $key => $item) {
      if ($key != 'data') {
        continue;
      }
      $fields = current($item);

      foreach ($fields as $idx => $value) {

        $form['level_' . $idx] = array(
          '#type' => 'fieldset',
          '#title' => $idx,
          '#collapsible' => TRUE,
          '#collapsed' => FALSE,
        );

        if (is_object($value)) {
          foreach ($value as $caption => $field) {
            $form['level_' . $idx]['event_connector_' . $caption] = array(
              '#type' => 'textfield',
              '#title' => $caption,
              '#default_value' => '',
            );
          }
        }
        else {
          $arr_value = current($value);
          foreach ($arr_value as $caption => $field) {
            $form['level_' . $idx]['event_connector_' . $caption] = array(
              '#type' => 'textfield',
              '#title' => $caption,
              '#default_value' => '',
            );
            $current_item = current($field);
            if (is_object($current_item)) {
              $form['level_' . $idx]['sub_' . $caption] = array(
                '#type' => 'fieldset',
                '#collapsible' => FALSE,
                '#collapsed' => FALSE,
              );

              foreach ($current_item as $a => $b) {
                $form['level_' . $idx]['sub_' . $caption]['event_connector_' . $a] = array(
                  '#type' => 'textfield',
                  '#title' => $a,
                  '#default_value' => '',
                );
              }
            }
          }
        }
      }
    }
  }

  return $form;
}

/**
 * Module settings form.
 */
function event_connector_settings() {
  $form = array();

  $form['event_connector_apikey'] = array(
    '#type' => 'textfield',
    '#title' => t('Apikey'),
    '#default_value' => variable_get('event_connector_apikey', ''),
    '#description' => t('Apikey to Event Calendar API.'),
    '#required' => TRUE,
  );

  $form['event_connector_test'] = array(
    '#type' => 'checkbox',
    '#title' => t('Test content.'),
    '#default_value' => variable_get('event_connector_test', FALSE),
  );

  return system_settings_form($form);
}
